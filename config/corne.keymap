/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * Custom keymap for 36 key 5 col layout by Raymond Ware
 */

/*                              36 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────┬────────────────────╮ ╭─────────────────────┬─────────────────────╮
  │  0   1   2   3   4 │  5   6   7   8   9 │ │ LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
  │ 10  11  12  13  14 │ 15  16  17  18  19 │ │ LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 │
  │ 20  21  22  23  24 │ 25  26  27  28  29 │ │ LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ 30  31  32 │ 33  34  35 ╭───────╯ ╰───────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────╯
          ╰────────────┴────────────╯   @raymondware  ╰─────────────┴─────────────╯             */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer aliases
#define DEF 0
#define SYM 1
#define NAV 2
#define NUMB 3

#define LT0  4  // left-top row
#define LT1  3
#define LT2  3
#define LT3  1
#define LT4  0

#define RT0  5  // right-top row
#define RT1  6
#define RT2  7
#define RT3  8
#define RT4  9

#define LM0 14  // left-middle row
#define LM1 13
#define LM2 12
#define LM3 11
#define LM4 10

#define RM0 15  // right-middle row
#define RM1 16
#define RM2 17
#define RM3 18
#define RM4 19

#define LB0 24  // left-bottom row
#define LB1 23
#define LB2 22
#define LB3 21
#define LB4 20

#define RB0 25  // right-bottom row
#define RB1 26
#define RB2 27
#define RB3 28
#define RB4 29

#define LH0 32  // left thumb keys
#define LH1 31
#define LH2 30

#define RH0 33  // right thumb keys
#define RH1 34
#define RH2 35

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

&mt {
  tapping-term = <400>;
};

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

// Root devicetree node start
/ {

  hm: homerow_mods {
    compatible = "zmk,behavior-hold-tap";
    label = "HOMEROW_MODS";
    #binding-cells = <2>;
    tapping-term-ms = <400>;
    quick-tap-ms = <0>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;
  };

  macros {
    vim_format_doc: vim_format_doc {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_press &kp LCTRL>,
      <&macro_tap &kp C>,
      <&macro_release &kp LCTRL>,
      <&macro_tap &kp F>;
    };
  };

  combos {

    compatible = "zmk,combos";

    combo_esc {
      timeout-ms = <50>;
      key-positions = <LT4 LT3>;
      bindings = <&kp ESC>;
    };

    combo_lshift_sticky {
      timeout-ms = <50>; 
      key-positions = <LM4 LM3>;
      bindings = <&sk LSHIFT>;
    };

    combo_rshift_sticky {
      timeout-ms = <50>;
      key-positions = <RM4 RM3>;
      bindings = <&sk RSHIFT>;
    };

    combo_tab {
      timeout-ms = <50>;
      key-positions = <LM3 LM2>;
      bindings = <&kp TAB>;
    };

    combo_lctrl {
      timeout-ms = <50>;
      key-positions = <LB4 LB3>;
      bindings = <&kp LCTRL>;
    };

    combo_rctrl {
      timeout-ms = <50>;
      key-positions = <RB4 RB3>;
      bindings = <&kp RCTRL>;
    };

    combo_lalt {
      timeout-ms = <50>;
      key-positions = <LB3 LB2>;
      bindings = <&kp LALT>;
    };

    combo_ralt {
      timeout-ms = <50>;
      key-positions = <RB3 RB2>;
      bindings = <&kp RALT>;
    };

    combo_lgui {
      timeout-ms = <50>;
      key-positions = <LM4 LB4>;
      bindings = <&kp GUI>;
    };

    combo_rbspc {
      timeout-ms = <50>;
      key-positions = <RT4 RT3>;
      bindings = <&kp BACKSPACE>;
    };

    // toggle layers

    combo_def {
      timeout-ms = <50>;
      key-positions = <RM0 RM1>;
      bindings = <&to DEF>;
    };
    
    combo_nav {
      timeout-ms = <50>;
      key-positions = <RB1 RB2>;
      bindings = <&to NAV>;
    };

    combo_sym {
      timeout-ms = <50>;
      key-positions = <RB0 RB1>;
      bindings = <&to SYM>;
    };

    combo_num {
      timeout-ms = <50>;
      key-positions = <RB2 RB3>;
      bindings = <&to NUMB>;
    };

    // vim combos
    combo_first_non_blank {
      timeout-ms = <50>;
      key-positions = <RT0 RT1>;
      bindings = <&kp CARET>;
    };

    combo_last_non_blank {
      timeout-ms = <50>;
      key-positions = <RT1 RT2>;
      bindings = <&kp DOLLAR>;
    };

    combo_format_doc {
      timeout-ms = <50>;
      key-positions = <RT2 RT3>;
      bindings = <&vim_format_doc>;
    };

    combo_comment_toggle {
      timeout-ms = <50>;
      key-positions = <RT3 RT4>;
      bindings = <&kp G &kp C &kp C>;
    };

    combo_gui {
      timeout-ms = <50>;
      key-positions = <LH1 RH1>;
      bindings = <&kp LGUI>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      // │     Q       │     W       │     E       │     R       │     T       │   │     Y       │     U       │     I       │     O       │     P       │
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // │     A       │     S       │     D       │     F       │     G       │   │     H       │     J       │     K       │     L       │    ;        │
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // │      Z      │     X       │     C       │     V       │     B       │   │     N       │     M       │    ,        │    .        │    /        │
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
      //                              │    CTL     │   MO(SYM)   │    Space    │   │    Enter    │   MO(NUMB)  │   Bksp      │
      //                              ╰────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
  
      // Key Bindings Configuration
      bindings = <
        &kp Q        &kp W        &kp E        &kp R        &kp T        &kp Y        &kp U        &kp I        &kp O        &kp P
        &hm LGUI A   &hm LALT S   &hm LCTRL D  &hm LSHIFT F &kp G        &kp H        &hm RSHIFT J &hm RCTRL K  &hm RALT L   &kp SEMICOLON
        &kp Z        &kp X        &kp C        &kp V        &kp B        &kp N        &kp M        &kp COMMA    &kp DOT      &kp SLASH
                               &kp LCTRL    &mo SYM     &kp SPACE        &kp ENTER    &mo NUMB     &kp BACKSPACE
      >;
    };

    // Symbol Layer
    // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    // │     !       │     @       │     #       │     $       │     %       │   │     ^       │     &       │     *       │     -       │     \       │
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    // │     `       │     ~       │     [       │     ]       │     -       │   │     +       │     {       │     }       │     (       │    )        │
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    // │     '       │     "       │     <       │     >       │     _       │   │     |       │     :       │     ;       │     ?       │    /        │
    // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
    //                             │    CTL      │    SHIFT    │    Space    │   │    Enter    │    SHIFT    │   Bksp      │
    //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯

   
    symbol_layer {
      bindings = <
        &kp EXCL       &kp AT       &kp HASH      &kp DOLLAR    &kp PERCENT  &kp CARET    &kp AMPS      &kp ASTERISK &kp LPAR     &kp RPAR
        &kp GRAVE      &kp TILDE    &kp LBKT      &kp RBKT      &kp MINUS    &kp EQUAL    &kp LBRC      &kp RBRC     &kp LBKT     &kp RBKT
        &kp SQT        &kp DQT      &kp LT        &kp GT        &kp UNDER    &kp PIPE     &kp COLON     &kp SEMI     &kp SLASH    &kp BACKSLASH
        &kp LCTRL      &kp LSHIFT      &kp SPACE     &kp ENTER     &kp RSHIFT      &kp BKSP
      >;
    };


    // Navigation Layer
    // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    // │     F1      │     F2      │     F3      │     F4      │     F5      │   │     F6      │     F7      │     F8      │     F9      │     F10     │
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    // │     F11     │     F12     │    none     │    none     │    none     │   │    LEFT     │    DOWN     │     UP      │    RIGHT    │    none     │
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    // │    none     │    none     │    none     │    none     │    none     │   │    none     │    none     │    none     │    none     │    none     │
    // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
    //                             │    LCTRL    │   LSHIFT    │    Space    │   │    Enter    │   RSHIFT    │   Bksp      │
    //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
    
    
    navigation_layer {
      bindings = <
        &kp F1        &kp F2       &kp F3        &kp F4        &kp F5        &kp F6       &kp F7       &kp F8       &kp F9       &kp F10
        &kp F11       &kp F12      &none         &none         &none         &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &kp END
        &none         &none        &none         &none         &none         &none        &none        &none        &none        &none
        &kp LCTRL     &kp LSHIFT      &kp SPACE     &kp ENTER     &kp RSHIFT       &kp BKSP
      >;
    };

    // Number Layer
    // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    // │     1       │     2       │     3       │     4       │     5       │   │     6       │     7       │     8       │     9       │     0       │
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    // │    ESC      │    TAB      │   MINUS     │  PLUS       │   SLASH     │   │   ASTERISK  │   PERCENT   │   EQUALS    │    DOT      │   COMMA     │
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    // │    none     │    LALT     │    none     │    none     │    none     │   │    LEFT     │    DOWN     │     UP      │    RIGHT    │    none     │
    // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
    //                             │    LCTRL    │   LSHIFT    │    Space    │   │    Enter    │   RSHIFT    │   Bksp      │
    //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
    
    number_layer {
      bindings = <
        &kp N1        &kp N2       &kp N3        &kp N4        &kp N5        &kp N6       &kp N7       &kp N8       &kp N9       &kp N0
        &kp ESC       &kp TAB      &kp MINUS     &kp PLUS      &kp SLASH     &kp ASTERISK &kp PERCENT  &kp EQUAL    &kp DOT      &kp COMMA
        &none         &kp LALT        &none         &none         &none         &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &none
        &kp LCTRL     &kp LSHIFT      &kp SPACE     &kp ENTER     &kp RSHIFT       &kp BKSP
      >;
    };
  };


};
// Root devicetree node end
